{"version":3,"sources":["pics/thinking.svg","pics/rainy.svg","pics/clear-day.svg","pics/clear-night.svg","pics/cloudy-day.svg","pics/cloudy-night.svg","pics/snowy.svg","pics/thunder.svg","components/header.jsx","components/weather-card-component.jsx","components/weather.jsx","index.js"],"names":["module","exports","Header","props","DT","Date","state","clock","toLocaleString","substring","amPM","greeting","greet","this","date","getHours","setInterval","setState","replace","React","Component","WC","className","style","display","styleProp","getWeekDay","dayProp","class","id","getDate","setTemp","forecastProp","src","setIcon","alt","dayNum","day","parseInt","today","daily","addDays","getMonth","getDay","days","newDate","setDate","json","length","item","format","dateString","list","dt_txt","valueOf","icon","weather","main","cNight","cDay","cloudyN","cloudyD","rainy","thunder","snowy","Math","round","temp","month","toString","getFullYear","Weather","call_type","city","data","Wdisplay","Edisplay","Hdisplay","input","bind","submit","event","value","target","city_zip","location","Number","preventDefault","apiKey","process","window","protocol","fetch","then","response","cod","console","log","onSubmit","type","placeholder","name","onChange","locationProps","Hmm","um","Hello","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d2c3d50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thinking.cb0d3c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-day.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.a3f3f38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day.80a5d865.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night.ef1c6aa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.67d63a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","import React from 'react';\r\nimport greet from 'greeting-time';\r\n\r\nclass Header extends React.Component{\r\n    //var hello = greet(new Date());\r\n    constructor(props){\r\n        super(props);\r\n\r\n            var DT = new Date();\r\n        this.state = { //setting intial state\r\n            clock: DT.toLocaleString().substring(11,16) + this.amPM(DT),\r\n            greeting: greet(DT)\r\n        }\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>How's the weather in your city?</h1>{/*greeting*/}\r\n                <h3>{this.state.clock}</h3>{/*time*/}\r\n            </div>\r\n        );\r\n    }\r\n    milconversion(date){\r\n        return (date.getHours() + 24) % 12 || 12;\r\n    }\r\n    amPM(date){\r\n        if(date.getHours() < 12){return ' AM';}\r\n        if(date.getHours() >= 12){return ' PM';}\r\n    }\r\n\r\n    componentDidMount(){//updating clock every 10 seconds\r\n        setInterval( () => {\r\n            this.setState({\r\n              clock : ((new Date()).toLocaleString().substring(11,16)).replace(/:$/ , \"\") + this.amPM(new Date())\r\n            })\r\n          },1000)\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport greet from 'greeting-time';\r\n\r\n//weather icons\r\nimport rainy from '../pics/rainy.svg';\r\nimport cDay from '../pics/clear-day.svg';\r\nimport cNight from '../pics/clear-night.svg';\r\nimport cloudyD from '../pics/cloudy-day.svg';\r\nimport cloudyN from '../pics/cloudy-night.svg';\r\nimport snowy from '../pics/snowy.svg';\r\nimport thunder from '../pics/thunder.svg';\r\n// import { rainy, cDay, cNight, cloudyD, cloudyN, tStorm, snow} from '../components/icon';\r\n\r\n//a component is an independent, reusable cod block\r\n  //divides the UI into smaller pieces ~ lego blocks\r\n\r\n//the simplest way to define a component is to write a function\r\n//use a function over a class if the component doesn't do much\r\n//if components need more functionality like keeping states use a class\r\n  //state = part of an app that can change\r\n\r\n//function = stateless components\r\n//class = stateful components\r\n\r\nclass WC extends React.Component{//React.Component subclass\r\n  //the only method you must define is render\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"weather-card\" style={{display: (this.props.styleProp)}}>\r\n        <h1>{this.getWeekDay(this.props.dayProp)}</h1>\r\n         <h2 class=\"date\" id=\"day\">{this.getDate(this.props.dayProp)}</h2>\r\n            <div class=\"icon\">\r\n               <span className=\"weather-icon\"></span>\r\n            </div>\r\n            <div class=\"temp\">\r\n                <div class=\"temperature\"><span>Temp:</span>{this.setTemp(this.props.dayProp, this.props.forecastProp)}<span>Â°</span></div>\r\n            </div>\r\n               <div class=\"icon\">\r\n                  <img src={this.setIcon(this.props.dayProp, this.props.forecastProp)} alt=\"weather icon\"/>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n  //additional methods\r\n  getDate(dayNum){//returns the date\r\n    //expected input: day0, day1, day2,....day4\r\n    var day = parseInt(dayNum.substring(3,4), 10);\r\n    var today = new Date();\r\n    var daily = this.addDays(today,day);\r\n\r\n    return (daily.getMonth()+1) + \"/\" + (daily.getDate());\r\n    // getMonth is 0 based indexing\r\n  }\r\n\r\n  getWeekDay(dayNum){//returns the day of the week\r\n    var days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\r\n    var day = parseInt(dayNum.substring(3,4), 10);//day0, day1,...\r\n    var today = new Date();\r\n    var daily = this.addDays(today,day);\r\n    var x = daily.getDay();\r\n\r\n    return days[x];\r\n  }\r\n\r\n  addDays(date, days){//for daily increment\r\n    var newDate = new Date(date);\r\n    newDate.setDate(newDate.getDate() + days);\r\n    return newDate;\r\n  }\r\n\r\n  setIcon(day,json){//change weather icons\r\n    if(!(json.length < 1 )){\r\n      var item = 0;\r\n      var daily = this.addDays(new Date(), parseInt(day.substring(3,4), 10))\r\n      var format = this.dateString(daily)\r\n      \r\n       //day increment\r\n       while (json.list[item].dt_txt.substring(0, 10).valueOf() === format) {\r\n        item++;\r\n       }\r\n      var weather = json.list[item].weather[0].main;\r\n      var icon;\r\n      switch(weather){\r\n          case 'Clear':\r\n            if( greet(new Date()) === 'Good evening' ){\r\n              icon = cNight;\r\n            }else{\r\n              icon = cDay;\r\n            }\r\n            break;\r\n  \r\n          case 'Clouds':\r\n              if( greet(new Date()) === 'Good evening' ){\r\n                icon = cloudyN;\r\n              }else{\r\n                icon = cloudyD;\r\n              }\r\n              break;\r\n          \r\n          case 'Rain':\r\n          case 'Drizzle':\r\n          case 'Mist':\r\n            icon = rainy;\r\n            break;\r\n          \r\n          case 'Thunderstorm':\r\n            icon = thunder;\r\n            break;\r\n  \r\n          case 'Snow':\r\n            icon = snowy;\r\n            break;\r\n  \r\n          default:\r\n            break;\r\n      }\r\n          return icon;\r\n    }     \r\n  }\r\n\r\n  setTemp(day, json){//set temperature\r\n      if(!(json.length < 1 )){\r\n        var item = 0;\r\n        var daily = this.addDays(new Date(), parseInt(day.substring(3,4), 10))\r\n        var format = this.dateString(daily)\r\n        \r\n         //day increment\r\n         while (json.list[item].dt_txt.substring(0, 10).valueOf() === format) {\r\n          item++;\r\n         }\r\n         return (Math.round(json.list[item].main.temp))\r\n      }\r\n      }\r\n\r\n      //\r\n  \r\n  dateString(date) {\r\n  //Date Formatter ~ takes in date and returns string format\r\n  //similar to openweahterapi JSON date format\r\n    var month;\r\n    var day;\r\n    if ((date.getMonth() + 1).toString().length === 1) {\r\n        month = 0 + '' + (date.getMonth() + 1);\r\n    } else {\r\n        month = '' + (date.getMonth() + 1);\r\n    }\r\n\r\n    if ((date.getDate() + 1).toString().length === 1) {\r\n        day = 0 + '' + (date.getDate());\r\n    } else {\r\n        day = '' + (date.getDate());\r\n    }\r\n    var DateString = date.getFullYear() + '-' + month + '-' + day;\r\n    return DateString;\r\n  }\r\n\r\n\r\n}//class end\r\n\r\nexport default WC;","import React from 'react';\r\nimport um from '../pics/thinking.svg';\r\nimport greet from 'greeting-time';\r\nimport WC from './weather-card-component';\r\n\r\nclass Weather extends React.Component{//React.Component subclass\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {//initial states\r\n            call_type: '',\r\n            city: '',\r\n            data: '',\r\n            Wdisplay: 'none',\r\n            Edisplay: 'none',\r\n            Hdisplay: ''\r\n        }\r\n        this.input = this.input.bind(this);\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    input(event){//handles user input\r\n        this.setState({value: event.target.value});\r\n        this.city_zip(event.target.value);\r\n    }\r\n\r\n    city_zip(location){\r\n         //search by zip code\r\n        if (location.length === 5 && Number.parseInt(location) + '' === location) {\r\n            this.setState({call_type: 'zip'});\r\n        } else { //call by city\r\n            this.setState({call_type: 'q'});\r\n        }\r\n    }\r\n\r\n    submit(event){\r\n        event.preventDefault();//prevents page from reloading\r\n   \r\n        const apiKey = process.env.REACT_APP_WEATHER_KEY;\r\n        // const call = axios.get(`http://api.openweathermap.org/data/2.5/forecast?${this.state.call_type}=${this.state.city}&appID=${apiKey}&units=imperial`);\r\n        // var JSON = call.json();\r\n        if (window.location.protocol === 'http:') {\r\n            fetch(`http://api.openweathermap.org/data/2.5/forecast?${this.state.call_type}=${this.state.value}&appID=${apiKey}&units=imperial`).then(function (response) {\r\n                return response.json();\r\n            }).then(response => {\r\n                if(response.cod !== '200'){\r\n                    console.log(response);\r\n                    this.setState({\r\n                        city: this.state.value, \r\n                        Edisplay: '',\r\n                        Wdisplay: 'none',\r\n                        Hdisplay: 'none'\r\n\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        data: response,\r\n                        Edisplay: 'none',\r\n                        Wdisplay: '',\r\n                        Hdisplay: 'none'\r\n                    })\r\n                }\r\n            });\r\n        } else {\r\n            fetch(`https://api.openweathermap.org/data/2.5/forecast?${this.state.call_type}=${this.state.value}&appID=${apiKey}&units=imperial`).then(function (response) {\r\n                return response.json();\r\n            }).then(response => {\r\n                if(response.cod !== '200'){\r\n                    console.log(response);\r\n                    this.setState({\r\n                        city: this.state.value, \r\n                        Edisplay: '',\r\n                        Wdisplay: 'none',\r\n                        Hdisplay: 'none'\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        data: response,\r\n                        Edisplay: 'none',\r\n                        Wdisplay: '',\r\n                        Hdisplay: 'none'\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //the only method you must define is render\r\n    render(){//mounting occurs\r\n      return (\r\n          <div className='weather-board'>\r\n                <div className='search-bar'>\r\n                    <form className=\"search-bar\" onSubmit={this.submit}>\r\n                        <input type=\"text\" placeholder='City or Zip' name='city' value={this.state.value} onChange={this.input}/>\r\n                        <button id='search' type='submit' value='submit' className='btn btn-primary'>Let's See</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className='weather-cards'>\r\n                    <Hello styleProp={this.state.Hdisplay}/>\r\n                    <WC dayProp='day0' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day1' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day2' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day3' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day4' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <Hmm locationProps={this.state.city} styleProp={this.state.Edisplay}/>\r\n                 </div>\r\n          </div>\r\n        \r\n      );\r\n    }\r\n\r\n}//end weather class\r\n\r\nclass Hmm extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"error-box\" style={{display: (this.props.styleProp)}}>\r\n                <h1>{this.props.locationProps}?</h1>\r\n                <h1>{this.props.styleProp}</h1>\r\n                <img className=\"face\" src={um} alt=\"confused\"/>\r\n            </div> \r\n        )\r\n    }\r\n}//end Hmm class\r\n\r\nclass Hello extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            greeting: greet(new Date())\r\n        }\r\n    }\r\n    componentDidMount(){//updating greeting every 30min\r\n        setInterval( () => {\r\n            this.setState({\r\n              greeting: greet(new Date())\r\n            })\r\n          },1800000 )\r\n    }\r\n    render(){\r\n        return(\r\n            <h1 className='greeting' style={{display: (this.props.styleProp)}}>{this.state.greeting}</h1>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Weather;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.sass';\n\n\n//importing components\nimport Header from './components/header';\nimport Weather from './components/weather';\n//rendering components\n//header\nReactDOM.render(<Header/>, document.getElementById('hello'));\n//Weather board\nReactDOM.render(<Weather/>, document.getElementById('app'));\n\n"],"sourceRoot":""}