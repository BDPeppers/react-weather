{"version":3,"sources":["pics/thinking.svg","pics/rainy.svg","pics/clear-day.svg","pics/clear-night.svg","pics/cloudy-day.svg","pics/cloudy-night.svg","pics/snowy.svg","pics/thunder.svg","components/header.jsx","components/weather-card-component.jsx","components/weather.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","DT","Date","state","clock","toLocaleString","substring","amPM","greeting","greet","react_default","a","createElement","date","getHours","_this2","setInterval","setState","replace","React","Component","WC","className","style","display","styleProp","getWeekDay","dayProp","class","id","getDate","setTemp","forecastProp","src","setIcon","alt","dayNum","day","parseInt","today","daily","addDays","getMonth","getDay","days","newDate","setDate","json","length","item","format","dateString","list","dt_txt","valueOf","icon","weather","main","cNight","cDay","cloudyN","cloudyD","rainy","thunder","snowy","Math","round","temp","month","toString","getFullYear","Weather","call_type","city","data","Wdisplay","Edisplay","Hdisplay","input","bind","assertThisInitialized","submit","event","value","target","city_zip","location","Number","preventDefault","apiKey","process","window","protocol","fetch","concat","then","response","cod","console","log","onSubmit","type","placeholder","name","onChange","weather_Hello","weather_card_component","weather_Hmm","locationProps","Hmm","um","Hello","_this3","_this4","ReactDOM","render","header","document","getElementById","components_weather"],"mappings":"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","file":"static/js/main.40b1b731.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thinking.cb0d3c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-day.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.a3f3f38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day.80a5d865.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night.ef1c6aa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.67d63a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","import React from 'react';\r\nimport greet from 'greeting-time';\r\n\r\nclass Header extends React.Component{\r\n    //var hello = greet(new Date());\r\n    constructor(props){\r\n        super(props);\r\n\r\n            var DT = new Date();\r\n        this.state = { //setting intial state\r\n            clock: DT.toLocaleString().substring(11,16) + this.amPM(DT),\r\n            greeting: greet(DT)\r\n        }\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>How's the weather in your city?</h1>{/*greeting*/}\r\n                <h3>{this.state.clock}</h3>{/*time*/}\r\n            </div>\r\n        );\r\n    }\r\n    milconversion(date){\r\n        return (date.getHours() + 24) % 12 || 12;\r\n    }\r\n    amPM(date){\r\n        if(date.getHours() < 12){return ' AM';}\r\n        if(date.getHours() >= 12){return ' PM';}\r\n    }\r\n\r\n    componentDidMount(){//updating clock every 10 seconds\r\n        setInterval( () => {\r\n            this.setState({\r\n              clock : ((new Date()).toLocaleString().substring(11,16)).replace(/:$/ , \"\") + this.amPM(new Date())\r\n            })\r\n          },1000)\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport greet from 'greeting-time';\r\n\r\n//weather icons\r\nimport rainy from '../pics/rainy.svg';\r\nimport cDay from '../pics/clear-day.svg';\r\nimport cNight from '../pics/clear-night.svg';\r\nimport cloudyD from '../pics/cloudy-day.svg';\r\nimport cloudyN from '../pics/cloudy-night.svg';\r\nimport snowy from '../pics/snowy.svg';\r\nimport thunder from '../pics/thunder.svg';\r\n// import { rainy, cDay, cNight, cloudyD, cloudyN, tStorm, snow} from '../components/icon';\r\n\r\n//a component is an independent, reusable cod block\r\n  //divides the UI into smaller pieces ~ lego blocks\r\n\r\n//the simplest way to define a component is to write a function\r\n//use a function over a class if the component doesn't do much\r\n//if components need more functionality like keeping states use a class\r\n  //state = part of an app that can change\r\n\r\n//function = stateless components\r\n//class = stateful components\r\n\r\nclass WC extends React.Component{//React.Component subclass\r\n  //the only method you must define is render\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"weather-card\" style={{display: (this.props.styleProp)}}>\r\n        <h1>{this.getWeekDay(this.props.dayProp)}</h1>\r\n         <h2 class=\"date\" id=\"day\">{this.getDate(this.props.dayProp)}</h2>\r\n            <div class=\"icon\">\r\n               <span className=\"weather-icon\"></span>\r\n            </div>\r\n            <div class=\"temp\">\r\n                <div class=\"temperature\"><span>Temp:</span>{this.setTemp(this.props.dayProp, this.props.forecastProp)}<span>°</span></div>\r\n            </div>\r\n               <div class=\"icon\">\r\n                  <img src={this.setIcon(this.props.dayProp, this.props.forecastProp)} alt=\"weather icon\"/>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n  //additional methods\r\n  getDate(dayNum){//returns the date\r\n    //expected input: day0, day1, day2,....day4\r\n    var day = parseInt(dayNum.substring(3,4), 10);\r\n    var today = new Date();\r\n    var daily = this.addDays(today,day);\r\n\r\n    return (daily.getMonth()+1) + \"/\" + (daily.getDate());\r\n    // getMonth is 0 based indexing\r\n  }\r\n\r\n  getWeekDay(dayNum){//returns the day of the week\r\n    var days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\r\n    var day = parseInt(dayNum.substring(3,4), 10);//day0, day1,...\r\n    var today = new Date();\r\n    var daily = this.addDays(today,day);\r\n    var x = daily.getDay();\r\n\r\n    return days[x];\r\n  }\r\n\r\n  addDays(date, days){//for daily increment\r\n    var newDate = new Date(date);\r\n    newDate.setDate(newDate.getDate() + days);\r\n    return newDate;\r\n  }\r\n\r\n  setIcon(day,json){//change weather icons\r\n    if(!(json.length < 1 )){\r\n      var item = 0;\r\n      var daily = this.addDays(new Date(), parseInt(day.substring(3,4), 10))\r\n      var format = this.dateString(daily)\r\n      \r\n       //day increment\r\n       while (json.list[item].dt_txt.substring(0, 10).valueOf() === format) {\r\n        item++;\r\n       }\r\n      var weather = json.list[item].weather[0].main;\r\n      var icon;\r\n      switch(weather){\r\n          case 'Clear':\r\n            if( greet(new Date()) === 'Good evening' ){\r\n              icon = cNight;\r\n            }else{\r\n              icon = cDay;\r\n            }\r\n            break;\r\n  \r\n          case 'Clouds':\r\n              if( greet(new Date()) === 'Good evening' ){\r\n                icon = cloudyN;\r\n              }else{\r\n                icon = cloudyD;\r\n              }\r\n              break;\r\n          \r\n          case 'Rain':\r\n          case 'Drizzle':\r\n          case 'Mist':\r\n            icon = rainy;\r\n            break;\r\n          \r\n          case 'Thunderstorm':\r\n            icon = thunder;\r\n            break;\r\n  \r\n          case 'Snow':\r\n            icon = snowy;\r\n            break;\r\n  \r\n          default:\r\n            break;\r\n      }\r\n          return icon;\r\n    }     \r\n  }\r\n\r\n  setTemp(day, json){//set temperature\r\n      if(!(json.length < 1 )){\r\n        var item = 0;\r\n        var daily = this.addDays(new Date(), parseInt(day.substring(3,4), 10))\r\n        var format = this.dateString(daily)\r\n        \r\n         //day increment\r\n         while (json.list[item].dt_txt.substring(0, 10).valueOf() === format) {\r\n          item++;\r\n         }\r\n         return (Math.round(json.list[item].main.temp))\r\n      }\r\n      }\r\n\r\n      //\r\n  \r\n  dateString(date) {\r\n  //Date Formatter ~ takes in date and returns string format\r\n  //similar to openweahterapi JSON date format\r\n    var month;\r\n    var day;\r\n    if ((date.getMonth() + 1).toString().length === 1) {\r\n        month = 0 + '' + (date.getMonth() + 1);\r\n    } else {\r\n        month = '' + (date.getMonth() + 1);\r\n    }\r\n\r\n    if ((date.getDate() + 1).toString().length === 1) {\r\n        day = 0 + '' + (date.getDate());\r\n    } else {\r\n        day = '' + (date.getDate());\r\n    }\r\n    var DateString = date.getFullYear() + '-' + month + '-' + day;\r\n    return DateString;\r\n  }\r\n\r\n\r\n}//class end\r\n\r\nexport default WC;","import React from 'react';\r\nimport um from '../pics/thinking.svg';\r\nimport greet from 'greeting-time';\r\nimport WC from './weather-card-component';\r\n\r\nclass Weather extends React.Component{//React.Component subclass\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {//initial states\r\n            call_type: '',\r\n            city: '',\r\n            data: '',\r\n            Wdisplay: 'none',\r\n            Edisplay: 'none',\r\n            Hdisplay: ''\r\n        }\r\n        this.input = this.input.bind(this);\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    input(event){//handles user input\r\n        this.setState({value: event.target.value});\r\n        this.city_zip(event.target.value);\r\n    }\r\n\r\n    city_zip(location){\r\n         //search by zip code\r\n        if (location.length === 5 && Number.parseInt(location) + '' === location) {\r\n            this.setState({call_type: 'zip'});\r\n        } else { //call by city\r\n            this.setState({call_type: 'q'});\r\n        }\r\n    }\r\n\r\n    submit(event){\r\n        event.preventDefault();//prevents page from reloading\r\n   \r\n        const apiKey = process.env.REACT_APP_WEATHER_KEY;\r\n        // const call = axios.get(`http://api.openweathermap.org/data/2.5/forecast?${this.state.call_type}=${this.state.city}&appID=${apiKey}&units=imperial`);\r\n        // var JSON = call.json();\r\n        if (window.location.protocol === 'http:') {\r\n            fetch(`http://api.openweathermap.org/data/2.5/forecast?${this.state.call_type}=${this.state.value}&appID=${apiKey}&units=imperial`).then(function (response) {\r\n                return response.json();\r\n            }).then(response => {\r\n                if(response.cod !== '200'){\r\n                    console.log(response);\r\n                    this.setState({\r\n                        city: this.state.value, \r\n                        Edisplay: '',\r\n                        Wdisplay: 'none',\r\n                        Hdisplay: 'none'\r\n\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        data: response,\r\n                        Edisplay: 'none',\r\n                        Wdisplay: '',\r\n                        Hdisplay: 'none'\r\n                    })\r\n                }\r\n            });\r\n        } else {\r\n            fetch(`https://api.openweathermap.org/data/2.5/forecast?${this.state.call_type}=${this.state.value}&appID=${apiKey}&units=imperial`).then(function (response) {\r\n                return response.json();\r\n            }).then(response => {\r\n                if(response.cod !== '200'){\r\n                    console.log(response);\r\n                    this.setState({\r\n                        city: this.state.value, \r\n                        Edisplay: '',\r\n                        Wdisplay: 'none',\r\n                        Hdisplay: 'none'\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        data: response,\r\n                        Edisplay: 'none',\r\n                        Wdisplay: '',\r\n                        Hdisplay: 'none'\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //the only method you must define is render\r\n    render(){//mounting occurs\r\n      return (\r\n          <div className='weather-board'>\r\n                <div className='search-bar'>\r\n                    <form className=\"search-bar\" onSubmit={this.submit}>\r\n                        <input type=\"text\" placeholder='City or Zip' name='city' value={this.state.value} onChange={this.input}/>\r\n                        <button id='search' type='submit' value='submit' className='btn btn-primary'>Let's See</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className='weather-cards'>\r\n                    <Hello styleProp={this.state.Hdisplay}/>\r\n                    <WC dayProp='day0' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day1' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day2' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day3' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <WC dayProp='day4' forecastProp={this.state.data} styleProp={this.state.Wdisplay}/>\r\n                    <Hmm locationProps={this.state.city} styleProp={this.state.Edisplay}/>\r\n                 </div>\r\n          </div>\r\n        \r\n      );\r\n    }\r\n\r\n}//end weather class\r\n\r\nclass Hmm extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"error-box\" style={{display: (this.props.styleProp)}}>\r\n                <h1>{this.props.locationProps}?</h1>\r\n                <h1>{this.props.styleProp}</h1>\r\n                <img className=\"face\" src={um} alt=\"confused\"/>\r\n            </div> \r\n        )\r\n    }\r\n}//end Hmm class\r\n\r\nclass Hello extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            greeting: greet(new Date())\r\n        }\r\n    }\r\n    componentDidMount(){//updating greeting every 30min\r\n        setInterval( () => {\r\n            this.setState({\r\n              greeting: greet(new Date())\r\n            })\r\n          },1800000 )\r\n    }\r\n    render(){\r\n        return(\r\n            <h1 className='greeting' style={{display: (this.props.styleProp)}}>{this.state.greeting}</h1>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Weather;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\n\n\n//importing components\nimport Header from './components/header';\nimport Weather from './components/weather';\n//rendering components\n//header\nReactDOM.render(<Header/>, document.getElementById('hello'));\n//Weather board\nReactDOM.render(<Weather/>, document.getElementById('app'));\n\n"],"sourceRoot":""}